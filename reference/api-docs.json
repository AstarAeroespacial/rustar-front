{
  "openapi": "3.0.3",
  "info": {
    "title": "Rust API with Utoipa",
    "description": "A Rust API with OpenAPI documentation using Utoipa",
    "license": {
      "name": ""
    },
    "version": "1.0.0"
  },
  "paths": {
    "/api/control/command": {
      "post": {
        "tags": [
          "API"
        ],
        "operationId": "send_command",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TelemetryResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/telemetry/{satellite}/history": {
      "get": {
        "tags": [
          "API"
        ],
        "summary": "Historic telemetry endpoint",
        "operationId": "get_historic_telemetry",
        "parameters": [
          {
            "name": "satellite",
            "in": "path",
            "description": "Name of satellite to fetch telemetry from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start timestamp",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "example": 1640995200
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End timestamp",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "example": 1640998800
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TelemetryResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/telemetry/{satellite}/latest": {
      "get": {
        "tags": [
          "API"
        ],
        "summary": "Latest telemetry endpoint",
        "operationId": "get_latest_telemetry",
        "parameters": [
          {
            "name": "satellite",
            "in": "path",
            "description": "Name of satellite to fetch telemetry from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TelemetryResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/config": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Configuration endpoint",
        "operationId": "get_config",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigResponse": {
        "type": "object",
        "required": [
          "server",
          "database",
          "message_broker"
        ],
        "properties": {
          "database": {
            "$ref": "#/components/schemas/crate.config.DatabaseConfig"
          },
          "message_broker": {
            "$ref": "#/components/schemas/crate.config.MessageBrokerConfig"
          },
          "server": {
            "$ref": "#/components/schemas/crate.config.ServerConfig"
          }
        }
      },
      "DatabaseConfig": {
        "type": "object",
        "required": [
          "url",
          "pool_size"
        ],
        "properties": {
          "pool_size": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "url": {
            "type": "string"
          }
        }
      },
      "HistoricTelemetryRequest": {
        "type": "object",
        "properties": {
          "endTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "LatestTelemetryRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MessageBrokerConfig": {
        "type": "object",
        "required": [
          "host",
          "port",
          "keep_alive"
        ],
        "properties": {
          "host": {
            "type": "string"
          },
          "keep_alive": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "ServerConfig": {
        "type": "object",
        "required": [
          "host",
          "port"
        ],
        "properties": {
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "TelemetryResponse": {
        "type": "object",
        "required": [
          "timestamp",
          "temperature",
          "voltage",
          "current",
          "battery_level"
        ],
        "properties": {
          "battery_level": {
            "type": "integer",
            "format": "int32"
          },
          "current": {
            "type": "number",
            "format": "float"
          },
          "temperature": {
            "type": "number",
            "format": "float"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "voltage": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "TestMessage": {
        "type": "object",
        "required": [
          "number",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "API",
      "description": "Main API endpoints"
    },
    {
      "name": "Config",
      "description": "Configuration endpoints"
    }
  ]
}